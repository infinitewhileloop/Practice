#!/bin/bash

# You and your fellow cohort of those in the "know" when it comes to binary decide to come up with a secret "handshake".
# 1 = wink
# 10 = double blink
# 100 = close your eyes
# 1000 = jump
# 10000 = Reverse the order of the operations in the secret handshake.
# Given a decimal number, convert it to the appropriate sequence of events for a secret handshake.
# https://exercism.org/tracks/bash/exercises/secret-handshake/edit

dec_to_bin() {    # convert decimal input to binary
    echo "obase=2;$1" | bc
}

bin=$(dec_to_bin $1)

if [[ "$bin" =~ 1$ ]]; then    # test if last digit of binary is '1'
    arr+=('wink')              # push to array
fi
if [[ "$bin" =~ 1.$ ]]; then
    arr+=('double blink')
fi
if [[ "$bin" =~ 1..$ ]]; then
    arr+=('close your eyes')
fi
if [[ "$bin" =~ 1...$ ]]; then
    arr+=('jump')
fi
if [[ "$bin" =~ ^1....$ ]]; then
    reverse=1
fi

str=
for item in "${arr[@]}"; do    # loop over each item in array
    if (( reverse == 1 )); then
        str="$item,$str"       # add items to string
    else
        str="$str$item,"
    fi
done

str=${str%,}    # remove trailing comma
echo "$str"
